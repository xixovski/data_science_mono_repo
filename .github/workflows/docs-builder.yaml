name: Deploy TechDocs

on:
  push:
    branches:
      - main
      - develop
    paths:
      - .github/workflows/docs-builder.yaml
      - catalog-info.yaml
      - mkdocs.yaml
      - docs/**
      - models/**/catalog-info.yaml
      - models/**/mkdocs.yaml
      - models/**/docs/**
      - models/**/**/catalog-info.yaml
      - models/**/**/mkdocs.yaml
      - models/**/**/docs/**


jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Add Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
#
#
#  dd - uses: actions/setup-node@v3
#   
#- uses: aws-actions/configure-aws-credentials@v1
#      with:
#        role-to-assume: arn:aws:iam::695394886911:role/DeployTechdocs
#        aws-region: us-east-1
#
#    - uses: actions/setup-node@v3
#
#
#  dd - uses: actions/setup-node@v3
#
#    - uses: actions/setup-java@v3
#      with:
#        distribution: 'zulu'
#        java-version: '11'
#
#    - name: download, validate, install plantuml and its dependencies
#      shell: bash
#      run: |
#        curl -o plantuml.jar -L https://sourceforge.net/projects/plantuml/files/plantuml.1.2021.4.jar/download
#        echo "be498123d20eaea95a94b174d770ef94adfdca18  plantuml.jar" | sha1sum -c -
#        mv plantuml.jar /opt/plantuml.jar
#        mkdir -p "$HOME/.local/bin"
#        echo $'#!/bin/sh\n\njava -jar '/opt/plantuml.jar' ${@}' >> "$HOME/.local/bin/plantuml"
#        chmod +x "$HOME/.local/bin/plantuml"
#        echo "$HOME/.local/bin" >> $GITHUB_PATH
#        sudo apt-get install -y graphviz
#    - name: Install techdocs-cli
#      shell: bash
#      run: sudo npm install -g @techdocs/cli
#
#    - name: Install mkdocs and mkdocs plugins
#      shell: bash
#      run: python -m pip install mkdocs-techdocs-core==1.*

#    - name: Generate docs site
#      shell: bash/
#      run: techdocs-cli generate --no-docker --verbose

#    - name: Publish docs site
#      shell: bash
#      run: techdocs-cli publish --publisher-type awsS3 --storage-name backstage-techdocs-production --entity ${{ inputs.namespace }}/${{ inputs.kind }}/${{ inputs.name }}
